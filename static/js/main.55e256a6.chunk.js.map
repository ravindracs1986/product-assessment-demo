{"version":3,"sources":["components/Pagination.js","components/ProductCard.js","components/header.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["LEFT_PAGE","range","from","to","step","i","push","Pagination","props","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","ceil","this","aria-label","className","map","index","key","href","onClick","aria-hidden","Component","ProductCard","product","image_url","Status","ProductName","src","Header","id","Footer","App","allProducts","currentProducts","data","offset","slice","fetch","then","response","json","catch","err","console","log","totalProducts","join","trim","UPC12Number","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.55e256a6.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  /**\n   * Let's say we have 10 pages and we set pageNeighbours to 2\n   * Given that the current page is 6\n   * The pagination control will look like the following:\n   *\n   * (1) < {4 5} [6] {7 8} > (10)\n   *\n   * (x) => terminal pages: first and last page(always visible)\n   * [x] => represents current page\n   * {...x} => represents page neighbours\n   */\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n\n    }\n\n    return range(1, totalPages);\n\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Products Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst ProductCard = props => {\n  const { image_url = null, Status = null, ProductName = null  } = props.product || {};\n\n if(Status=='ACTIVE'){\n  return (\n    <div className=\"col-lg-4 col-md-6 col-sm-6 product-card\">\n      <div className=\"product-card-container border-gray rounded border mx-2 my-3 d-flex flex-row align-items-center p-0 bg-light\">\n        <div className=\"h-100 position-relative border-gray border-right px-2 bg-white rounded-left\">\n           <img src={image_url} />\n        </div>\n        <div className=\"px-3\">\n          <span className=\"product-name text-dark d-block font-weight-bold activeClass\">{ProductName}</span>\n          <span className=\"product-region text-secondary text-uppercase activeClass\">{Status}</span>\n         </div>\n      </div>\n    </div>\n  )\n}else{\n  return (\n    <div className=\"col-lg-4 col-md-6 col-sm-6 product-card\">\n      <div className=\"product-card-container border-gray rounded border mx-2 my-3 d-flex flex-row align-items-center p-0 bg-light\">\n        <div className=\"h-100 position-relative border-gray border-right px-2 bg-white rounded-left\">\n           <img src={image_url} />\n        </div>\n        <div className=\"px-3\">\n          <span className=\"product-name text-dark d-block font-weight-bold inactiveClass\">{ProductName}</span>\n          <span className=\"product-region text-secondary text-uppercase inactiveClass\">{Status}</span>\n         </div>\n      </div>\n    </div>\n  )\n}\n  \n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    image_url: PropTypes.string.isRequired,\n    Status: PropTypes.string.isRequired,\n    ProductName: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default ProductCard;\n","import React, {Component} from 'react';\n\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <nav className=\"blue-grey darken-3\" >\n        <div className=\"nav-wrapper\">\n          <div className=\"brand-logo\">\n            <a href=\"#\">\n            products-assessment-demo\n            </a>\n          </div>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n           \n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React, {Component} from 'react';\n\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"page-footer blue-grey darken-1\">\n          \n          <div className=\"footer-copyright\">\n            <div className=\"container\">\n            © 2016 Copyright Products Assessment Demo\n           \n            </div>\n          </div>\n        </footer>\n    )\n  }\n}\n","import './App.css';\r\nimport React, { Component } from 'react';\r\n\r\nimport Pagination from './components/Pagination';\r\nimport ProductCard from './components/ProductCard';\r\nimport Header from './components/header';\r\nimport Footer from './components/footer';\r\n\r\nclass App extends Component {\r\n  state = { allProducts: [], currentProducts: [], currentPage: null, totalPages: null }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch('https://demo6976647.mockable.io/productList').then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      // Work with JSON data here\r\n     this.setState({allProducts: data});\r\n    }).catch(err => {\r\n      // Do something for an error here\r\n      console.log(\"Error Reading data \" + err);\r\n    });\r\n\r\n  }\r\n\r\n  onPageChanged = data => {\r\n    \r\n    const { allProducts } = this.state;\r\n    const { currentPage, totalPages, pageLimit } = data;\r\n\r\n    const offset = (currentPage - 1) * pageLimit;\r\n    const currentProducts = allProducts.slice(offset, offset + pageLimit);\r\n\r\n    this.setState({ currentPage, currentProducts, totalPages });\r\n  }\r\n\r\n  render() {\r\n    const { allProducts, currentProducts, currentPage, totalPages } = this.state;\r\n    const totalProducts = allProducts.length;\r\n    \r\n    if (totalProducts === 0) return null;\r\n\r\n    const headerClass = ['text-dark py-2 pr-4 m-0', currentPage ? 'border-gray border-right' : ''].join(' ').trim();\r\n\r\n    return (\r\n      <div>\r\n      <Header />\r\n      <div className=\"container mb-5\">\r\n        <div className=\"row d-flex flex-row py-5\">\r\n       \r\n          <h2 className=\"text-md-center\">Welcome to Product -assessment demo</h2>\r\n          <div className=\"w-100 px-4 py-5 d-flex flex-row flex-wrap align-items-center justify-content-between\">\r\n            <div className=\"d-flex flex-row align-items-center\">\r\n\r\n            {/*   <h2 className={headerClass}>\r\n                <strong className=\"text-secondary\">{totalProducts}</strong> Products\r\n              </h2> */}\r\n\r\n              {/* { currentPage && (\r\n                <span className=\"current-page d-inline-block h-100 pl-4 text-secondary\">\r\n                  Page <span className=\"font-weight-bold\">{ currentPage }</span> / <span className=\"font-weight-bold\">{ totalPages }</span>\r\n                </span>\r\n              ) } */}\r\n\r\n            </div>\r\n\r\n            {/* <div className=\"d-flex flex-row py-4 align-items-center\">\r\n              <Pagination totalRecords={totalProducts} pageLimit={9} pageNeighbours={1} onPageChanged={this.onPageChanged} />\r\n            </div> */}\r\n          </div>\r\n\r\n          { currentProducts.map(product => <ProductCard key={product.UPC12Number} product={product} />) }\r\n\r\n          <div className=\"product__pagination w-100 px-4 py-5 d-flex flex-row flex-wrap align-items-center justify-content-between\">\r\n                        {/* <a href=\"#\">1</a>\r\n                        <a href=\"#\">2</a>\r\n                        <a href=\"#\">3</a>\r\n                        <a href=\"#\"><i class=\"fa fa-long-arrow-right\"></i></a> */}\r\n             <div className=\"d-flex flex-row py-4 align-items-center\">\r\n              <Pagination totalRecords={totalProducts} pageLimit={9} pageNeighbours={1} onPageChanged={this.onPageChanged} />\r\n            </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n       <Footer />\r\n       </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}